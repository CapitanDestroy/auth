{"name":"Auth","tagline":"Authorization for humans","body":"====================================\r\nAuth | Authorization for Humans\r\n====================================\r\n\r\nRESTful, Simple Authorization system\r\n\r\n\r\n\r\n\r\n\r\n===============\r\nWhat is Auth?\r\n===============\r\nAuth is a module that makes authorization simple and also scalable and powerful.  It also has a beautiful RESTful API for use in micro-service architectures and platforms.  It is originally desinged to use in Appido, a scalable media market in Iran.\r\n\r\nIt supports Python2.6+\r\n\r\nI use Travis and Codecov to keep myself honest.\r\n\r\n===================\r\nrequirements\r\n==================\r\n\r\nYou need to access to **mongodb**.  If you are using a remote mongodb,  provide these environment variables:\r\n\r\n``MONGO_HOST`` and ``MONGO_PORT``\r\n   \r\n\r\n=====================\r\nInstallation\r\n=====================\r\n\r\n\r\n    pip install auth\r\n\r\n\r\n===================\r\nShow me an example\r\n===================\r\nok, lets image you have two users, **Jack** and **Sara**.  Sara can cook and Jack can dance. Both can laugh.\r\n\r\nYou also need to choose a secret key for your application.  Because you may want to use Auth in various tools and each must have a secret key for seperating their scope.\r\n\r\n\r\n\r\n    my_secret_key = \"pleaSeDoN0tKillMyC_at\"\r\n    from auth import Authorization\r\n    cas = Authorization(my_secret_key)\r\n\r\nNow, Lets add 3 groups, Cookers, Dancers and Laughers.  Remember that groups are Roles.  So when we create a group, indeed we create a role:\r\n\r\n\r\n\r\n    cas.add_group('cookers')\r\n    cas.add_group('dancers')\r\n    cas.add_group('laughers')\r\n\r\n\r\nOk, great. You have 3 groups and you need to authorize them to do special things.\r\n\r\n\r\n\r\n    cas.add_permission('cookers', 'cook')\r\n    cas.add_permission('dancers', 'dance')\r\n    cas.add_permission('laughers', 'laugh')\r\n\r\n\r\nGood.  You let cookers to cook and dancers to dance etc...\r\nThe final part is to set memberships for Sara and Jack:\r\n\r\n\r\n\r\n    cas.add_membership('sara', 'cookers')\r\n    cas.add_membership('sara', 'laughers')\r\n    cas.add_membership('jack', 'dancers')\r\n    cas.add_membership('jack', 'laughers')\r\n\r\n\r\n\r\nThat's all we need.  Now lets ensure that jack can dance:\r\n\r\n\r\n\r\n    if cas.user_has_permission('jack', 'dance'):\r\n        print('YES!!! Jack can dance.')\r\n\r\n\r\n===================\r\nRESTful API\r\n===================\r\nLets run the server on port 4000:\r\n\r\n\r\n\r\n    from auth import api, serve\r\n    serve('localhost', 4000, api)\r\n\r\nOr, from version 0.1.2+ you can use this command:\r\n\r\n\r\n\r\n    auth-server\r\n\r\n\r\nSimple! Authorization server is ready to use.  You can use it via simple curl or using mighty Requests module.  So in you remote application, you can do something like this:\r\n\r\n\r\n\r\n    import requests\r\n    secret_key = \"pleaSeDoN0tKillMyC_at\"\r\n    auth_api = \"http://127.0.0.1:4000/api\"\r\n\r\n\r\nLets create admin group:\r\n\r\n\r\n\r\n    requests.post(auth_api+'/role/'+secret_key+'/admin')\r\n\r\n\r\nAnd lets make Jack an admin:\r\n\r\n\r\n\r\n    requests.post(auth_api+'/permission/'+secret_key+'/jack/admin')\r\n\r\nAnd finally let's check if Sara still can cook:\r\n\r\n\r\n\r\n    requests.get(auth_api+'/has_permission/'+secret_key+'/sara/cook')\r\n\r\n\r\n\r\n===================\r\nAPI Methods\r\n===================\r\n- ``/ping`` [GET]\r\n\r\n\r\n Ping API, useful for your monitoring tools\r\n\r\n----\r\n\r\n- ``/api/membership/{KEY}/{user}/{role}`` [GET/POST/DELETE]\r\n\r\n Adding, removing and getting membership information.\r\n\r\n----\r\n\r\n- ``/api/permission/{KEY}/{role}/{name}`` [GET/POST/DELETE]\r\n\r\n Adding, removing and getting permissions\r\n\r\n----\r\n\r\n- ``/api/has_permission/{KEY}/{user}/{name}`` [GET]\r\n\r\n Getting user permission info\r\n\r\n----\r\n\r\n- ``/api/role/{KEY}/{role}`` [GET/POST/DELETE]\r\n\r\n  Adding, removing and getting roles\r\n\r\n\r\n===================\r\nCopyright\r\n===================\r\n \r\n- Farsheed Ashouri `@ <mailto:rodmena@me.com>`_\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}